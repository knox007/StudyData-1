/// 객체지향 프로그래밍과 클래스 //////////////////////////////////////

-----------------------------
1.	객체지향 프로그래밍
-----------------------------

	1.	정의

		-	코드내의 모든 것을 객체로 표현하고자 하는 프로그래밍 패러다임.

			-	Object Oriented Programming ( OOP )

			예)	객체의 예

				-	사람, 자동차, 컴퓨터 등...


		-	객체를 표현하는 두가지 요소

			-	속성, 기능

			-	속성
				
				-	객체를 구성하는 요소.

				-	명사로 표현이 가능한 것.

					예)
				
						사람
		
						-	피부색, 키, 몸무게 등.

						파일

						-	크기, 확장자, 생성 날짜 등.

			-	기능

				-	객체가 주체적으로 또는 수동적으로 하는 동작.

				-	동사로 표현 가능한 것.

					예)

						사람

						-	걷다, 뛰다, 보다, 듣다 등.

						파일

						-	복사하다, 수정하다, 삭제하다 등.


	2.	클래스와 객체

		-	속성과 기능을 C# 코드로 표현

			-	속성	->	데이터( 필드, 멤버 변수 )

			-	기능	->	메소드( 멤버 함수 )


			->	객체는 데이터와 메소드로 이루어짐.



		-	클래스는 객체를 만들기 위한 데이터 타입.

			예)	int a;

				->	int 는 a라는 변수를 만드는데 사용한 데이터 타입.

				CTest test = new CTest();

				->	CTest는 test라는 객체(변수)를 만드는데 사용한 데이터 타입.

		-	붕어빵에 비유를 한다면

			클래스	-> 	붕어빵 틀.

			객체	->	붕어빵.


	( 소스 참고 )			

			

			
			

