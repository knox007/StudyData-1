/// 생성자와 종료자(소멸자) //////////////////////////////////////

-----------------------------
1.	생성자
-----------------------------

	1.	특징

		-	클래스와 이름이 같고 반환형 없음.
				
		-	접근제한자	클래스_이름	(매개변수 정보)

			예)	Class Cat
				{
					public Cat()
					{
						//	필드 초기화
						......
					}
				}

		-	기본 생성자

			-	명시적으로 생성자를 구현하지 않아도 컴파일러가 자동으로 만들어줌.

		-	메소드와 마찬가지로 오버로딩이 가능.

				예)	Class Cat
					{
						public Cat()
						{
							//	필드 초기화
							......
						}

						public Cat( string name, string color)
						{
							_name = name;

							_color = color;
						}

					}

			-	프로그래머가 생성자를 하나라도 직접 정의하면 기본 생성자는 제공되지 않음.


-----------------------------
2.	종료자(소멸자)
-----------------------------

	1.	특징

		-	~클래스_이름()
		
		-	CLR( C#으로 만든 프로그램이 실행되는 환경, Common Language Runtime )의 

			가비지 컬렉터가 객체 소멸 시점을 판단해서 종료자를 호출.

		-	종료자는 직접 호출하지 않는다.

			-	CLR의 가비지 컬렉터가 언제 동작할지 예측 불능.

			-	정리해야할 가비지가 일정양에 이르러야 동작

				-	가비지가 일정양에 도달하는 시간을 정확히 알수 없음.
			
			-	명시적으로 종료자가 구현되어 있다면

				가비지 컬렉터가 Finalize()메소드를 클래스의 족보를 타고 올라가며 호출.

				이는 성능저하의 확률을 높임.

		**	생성은 생성자에게, 뒤처리는 가비지 컬렉터에게!!


		(소스 참고)

		