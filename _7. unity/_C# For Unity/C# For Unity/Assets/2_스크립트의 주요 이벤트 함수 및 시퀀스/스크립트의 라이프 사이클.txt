/// 스크립트 //////////////////////////////////////////////////

참고 : https://docs.unity3d.com/kr/current/Manual/ExecutionOrder.html

--------------
1.	생명주기
--------------
	1.	정의 : 	유니티 이벤트 함수 실행순서.

			유니티 내부에서 자동적으로 호출되는 함수들의 호출 순서.

			( "유니티 생명주기" 이미지 참고, 주요 함수들만 간추림 )


	2.	설명
			
		
		-	Awake		:	스크립트가 실행될 때 최초 실행되는 함수.

						해당 스크립트의 상태 값이나 변수의 초기화에 적합.

						스크립트가 비활성화 되어 있어도 호출됨.

						게임오브젝트 자체가 비활성화된 상태에서 시작했다가 다시 활성화 시킬때 최초 1회 실행됨.

						코루틴으로 실행 못함( IEnumerator Awake() 불가 )

						모든 게임 오브젝트와 프리팹의 초기화나 인스턴스화 직후에 호출됨으로 GameObject.Find 함수 호출에 대해서 안정적임.



		-	OnEnable	:	게임오브젝트 또는 스크립트가 활성화 되었을때 호출됨.
	


		-	Start		:	스크립트의 인스턴스가 활성화 되면 Update함수가 최초 호출되기 전에 한번 호출됨.

						스크립트가 활성화 되어있어야 실행된다.

						모든 스크립트의 Awake가 모두 실행된 후에 실행된다.
						
						코루틴으로 실행 가능( IEnumerator Start() )



		-	FixedUpdate	:	주로 물리 엔진을 사용 하는 경우에 일정시간 간격으로 힘을 가할 때 사용.

						호출 주기는 일정하다 ( 기본 0.02초, Edit - Project Settings - Time - Fixed Timestep 에서 변경 가능 )
						
						프레임 속도와는 독립적으로 신뢰할 수 있는 타이머에서 호출하므로 이동 등의 연산에 Time.deltaTime을 곱할 필요 없음.
			


		-	Update		:	매 프레임마다 한 번씩 호출되는 함수로 데이터 처리나 가공 등에 사용된다.

						스크립트가 활성화 되어 있어야 사용 가능하며, 호출 주기가 일정하지 않다.

						-	Update는 기기의 성능이나 게임 최적화 정도에 따라 호출 주기가 변할 수 있다.



		-	LateUpdate	:	모든 Update 함수가 호출된 뒤 한번씩 호출됨.( Update 결과가 전부 반연된 뒤 실행 )

						순차적으로 실행해야 하는 로직에 사용됨.( 예) 카메라 이동. 플레이어 등의 이동로직이 끝난뒤 따라가는 로직 실행 )

						스크립트가 활성화 되어 있어야 사용 가능.



		-	OnDisable	:	게임오브젝트 또는 스크립트가 비활성화 되었을 때 호출됨.
						
		
		-	OnDestroy	:	오브젝트의 라이프 사이클 마지막 프레임이 업데이트 된후 실행.
						( Destroy 함수 또는 씬 종료시 )
						
						마지막 프레임이 끝나면 메모리가 소멸됨.


		-	OnApplicationQuit	:	응용프로그램 종료 전 모든 게임오브젝트에서 호출됨.
							
							에디터 모드 - 플레이 모드 중지시 호출.
							웹 플레이어 - 웹 뷰가 닫힐 때 호출.	
						
						



























