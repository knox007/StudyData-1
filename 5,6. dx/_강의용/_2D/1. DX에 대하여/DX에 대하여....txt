/// DX에 대하여... /////////////////////////////////////////
--------------------------
1.	윈도우 95 등장.
--------------------------
	1.	Dos에서 Windows로...

		-	모든 명령을 타이핑하던 작업 방식에서 GUI( Graphic User Interface )기반의 
			운영체제로 변환되어 초보자들도 쉽게 적응.

		-	윈도우 95이전에도 윈도우 3.1이나 맥OS등의 GUI 기반 운영체제가 있었으나
			윈도우 3.1은 편의성이 떨어졌고, 맥OS는 애플사 컴퓨터에서만 가능.
		

--------------------------
2.	윈도우 95와 게임.
--------------------------
	1.	과도기
		-	각 운영체제의 개발 환경 차이로 인해
			초기 윈도우 95용 게임은 도스 게임에 비해 그 수가 절대적으로 부족.

			-	도스는 구조가 단순하여 게임을 구동하기 위해 사용하는
				각종 하드웨어(그래픽카드, 사운드카드, 키보드, 마우스 등)를
				게임 프로그램 내에서 직접 제어하면서 성능을 이끌어낼 수 있었다

			-	윈도우는 도스와 비교되지 않을 정도로 구조가 복잡하고 기능이 많은데다,
				게임이 구동되는 중에도 배경에서 운영체제가 상당량의 자원(CPU속도, 메모리 용량 등)을 점유하고 있어서
				게임 프로그램에서 하드웨어를 효과적으로 제어하기가 어려웠다. 

		-	윈도우 95 출시 이후 pc용 하드웨어의 종류 급증.
			
			- 	도스용 게임이라면 프로그램 내에서 각기 다른 하드웨어가 호환되도록
				개발자가 직접 수많은 테스트를 거치며 프로그램을 손봐야 한다

				예)	A그래픽카드를 꽂은 PC에서는 잘 구동되던 게임이 
					B그래픽카드를 꽂은 PC에서는 오작동을 일으키거나
					아예 구동이 되지 않는 등의 상황이 벌어질 수 있었다.

--------------------------
3.	DX 등장
--------------------------
	1.	Direct X 발표.
		-	윈도우용 멀티미디어 소프트웨어 개발 활성화(특히 게임)를 목표로
			마이크로 소프트는 1995년 10월에 DX를 발표.
		
		-	여러 종류의 멀티미디어 관련 하드웨어에서 최적의 성능을 끌어내기 위해 
			여러가지 프로그램 규칙을 일련의 함수들로 규정하여 모아놓고,
			개발자들이 쉽게 참조, 활용할 수 있도록 만들어놓은 인터페이스로 재구성.

		-	구성
			
			DirectDraw 	: 2D 그래픽 구현
			Direct3D 	: 3D 그래픽 구현.
			DirectSound	: 음향 재생.	
			DirectInput	: 키보드, 마우스, 게임 패드등 제어.
			DirectPlay	: 네트워크 기능 지원.
			DirectShow	: 동영상 기능 지원.
		
		-	DX 이전과 이후.
			-	before...
				멀티미디어 프로그램 관련 기능(그래픽 카드, 사운드 카드 등)이 제대로 작동하는지
				확인하기 위해 직접 하드웨어에 테스트를 거쳐야 했다.

			-	after...
				다이렉트X는 `하드웨어 추상계층(HAL Hardware Abstraction Layer)'를 제공하여
				게임 소프트웨어와 컴퓨터 하드웨어간 커뮤니케이션을 수행.				
		
				-	개발자들로 하여금 사용자들이 어떤 그래픽카드나 사운드 카드 등을 사용할 것인가
					하는 부수적인 부분에 신경을 쓰지 않고 프로그램을 개발할 수 있게 해준다.

			
				

	



--------------------------
4.	Direct3D 란?
--------------------------
	1.	Direct3D(이하 D3D)	:	3D 가속 하드웨어를 이용해 3D 세계를 표현할 수 있도록 해주는 그래픽 API.


	2.	제어 방식		:	Direct3D는 하드웨어 추상 계층(HAL, Hardware Abstraction Layer)을 통하여 그래픽 장치를 제어.(자료 참고)
					
						그래픽 카드의 종류는 다양하며 각각 다른 방식으로 작동.
						
						마이크로 소프트는 각각의 장치 제조사에게 HAL을 구현해줄 것을 요구.

						-	D3D가 정의 하지만 장치에서 지원하지 않는 기능들은 HAL에 포함되지 않음.

							특정장치에서 지원되는 최신 기능을 이용하고 싶을때는 먼저 해당 기능을 장치가 제공하는지 확인해야함.

							-	해당 기능을 이용하고 싶은 경우 REF 장치를 통해서 이용 가능.

						
						-	REF( 레퍼런스 래스터라이저 ) : 모든 D3D API를 소프트웨어로 애뮬레이트 가능.

							-	순수 개발 목적으로만 제공됨.
							-	Directx SDK에만 포함됨.
							-	최종 배포는 불가.
							-	테스트 이외의 목적으로 이용하기에는 느림.

						D3DDEVTYPE_HAL / D3DDEVTYPE_REF 로 지정 가능.
						

					
					
	3.	COM( 컴포넌트 객체 모델 )	:	DX를 프로그래밍 언어에 독립적으로 만들어주고 하위 호환성을 갖출 수 있게 하는 기술.
							
							COM 인터페이스의 메서드나 함수를 통해 포인터를 얻음( new 등의 키워드로 만들지 않음 )
							
							작업후 Release 함수를 호출하여 종료.

					

	4.	스왑 체인과 페이지 플리핑	:	프레임 간의 부드러운 화면 전환.
							
		스왑 체인	:	D3D가 두개나 세개(주로 두개)의 표면을 하나의 그룹으로 관리.
					
					전면 버퍼와 후면 버퍼로 구분 되며 현재 모니터에 보이는 내용들이 전면버퍼에서 관리 되며
					
					현재 처리중인 프레임이 후면 버퍼에서 관리된다.( 더블 버퍼링 개념과 유사 )
					







인터넷 발췌>