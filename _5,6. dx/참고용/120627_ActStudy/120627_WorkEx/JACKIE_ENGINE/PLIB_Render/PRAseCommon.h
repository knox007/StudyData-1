#ifndef _PRASECOMMON_H_
#define _PRASECOMMON_H_
#pragma once


enum eASEKEY_
{
	eASEKEY_GEOMOBJECT,
	eASEKEY_NODE_NAME,
	eASEKEY_NODE_TM,

	eASEKEY_MESH,
	eASEKEY_MESH_NUMVERTEX,
	eASEKEY_MESH_NUMFACES,

	eASEKEY_MESH_VERTEX_LIST,
	eASEKEY_MESH_VERTEX,
	eASEKEY_MESH_FACE_LIST,
	eASEKEY_MESH_FACE,

	eASEKEY_MATERIAL_LIST,
	eASEKEY_MATERIAL_COUNT,
	eASEKEY_MATERIAL_REF,
	eASEKEY_MATERIAL,

	eASEKEY_MAP_DIFFUSE,
	eASEKEY_BITMAP,

	eASEKEY_MESH_NUMTVERTEX,
	eASEKEY_MESH_TVERTLIST,
	eASEKEY_MESH_TVERT,

	eASEKEY_MESH_NUMTVFACES,
	eASEKEY_MESH_TFACELIST,
	eASEKEY_MESH_TFACE,

	eASEKEY_MESH_NORMALS,
	eASEKEY_MESH_FACENORMAL,

	eASEKEY_TM_ANIMATION,
	eASEKEY_CONTROL_ROT_TRACK,
	eASEKEY_CONTROL_ROT_SAMPLE,
	eASEKEY_CONTROL_SCALE_TRACK,
	eASEKEY_CONTROL_SCALE_SAMPLE,
	eASEKEY_CONTROL_POS_TRACK,
	eASEKEY_CONTROL_POS_SAMPLE,

	eASEKEY_CONTROL_ROT_TCB,
	eASEKEY_CONTROL_TCB_ROT_KEY,

	eASEKEY_SIZE

};//	eASEKEY_ 
//------------------------------------------------------------------------
struct SPRAseKey
{
	eASEKEY_	_eAseKey;
	TCHAR		_tszAseKeyword[32];

};//	SPRAseKey
//------------------------------------------------------------------------
SPRAseKey g_ASEKey[eASEKEY_SIZE]	=	
{
	{ eASEKEY_GEOMOBJECT,			PUT_CSTR_TCHAR("*GEOMOBJECT {")			},
	{ eASEKEY_NODE_NAME,			PUT_CSTR_TCHAR("*NODE_NAME")			},
	{ eASEKEY_NODE_TM,				PUT_CSTR_TCHAR("*NODE_TM {")			},

	{ eASEKEY_MESH,					PUT_CSTR_TCHAR("*MESH {")				},
	{ eASEKEY_MESH_NUMVERTEX,		PUT_CSTR_TCHAR("*MESH_NUMVERTEX")		},
	{ eASEKEY_MESH_NUMFACES,		PUT_CSTR_TCHAR("*MESH_NUMFACES")		},

	{ eASEKEY_MESH_VERTEX_LIST,		PUT_CSTR_TCHAR("*MESH_VERTEX_LIST {")	},
	{ eASEKEY_MESH_VERTEX,			PUT_CSTR_TCHAR("*MESH_VERTEX")			},
	{ eASEKEY_MESH_FACE_LIST,		PUT_CSTR_TCHAR("*MESH_FACE_LIST {")		},
	{ eASEKEY_MESH_FACE,			PUT_CSTR_TCHAR("*MESH_FACE")			},

	{ eASEKEY_MATERIAL_LIST,		PUT_CSTR_TCHAR("*MATERIAL_LIST {")		},
	{ eASEKEY_MATERIAL_COUNT,		PUT_CSTR_TCHAR("*MATERIAL_COUNT")		},
	{ eASEKEY_MATERIAL_REF,			PUT_CSTR_TCHAR("*MATERIAL_REF")			},
	{ eASEKEY_MATERIAL,				PUT_CSTR_TCHAR("*MATERIAL ")			},

	{ eASEKEY_MAP_DIFFUSE,			PUT_CSTR_TCHAR("*MAP_DIFFUSE {")		},
	{ eASEKEY_BITMAP,				PUT_CSTR_TCHAR("*BITMAP")				},

	{ eASEKEY_MESH_NUMTVERTEX,		PUT_CSTR_TCHAR("*MESH_NUMTVERTEX")		},
	{ eASEKEY_MESH_TVERTLIST,		PUT_CSTR_TCHAR("*MESH_TVERTLIST {")		},
	{ eASEKEY_MESH_TVERT,			PUT_CSTR_TCHAR("*MESH_TVERT")			},

	{ eASEKEY_MESH_NUMTVFACES,		PUT_CSTR_TCHAR("*MESH_NUMTVFACES")		},
	{ eASEKEY_MESH_TFACELIST,		PUT_CSTR_TCHAR("*MESH_TFACELIST")		},
	{ eASEKEY_MESH_TFACE,			PUT_CSTR_TCHAR("*MESH_TFACE")			},

	{ eASEKEY_MESH_NORMALS,			PUT_CSTR_TCHAR("*MESH_NORMALS {")		},
	{ eASEKEY_MESH_FACENORMAL,		PUT_CSTR_TCHAR("*MESH_FACENORMAL")		},

	{ eASEKEY_TM_ANIMATION,			PUT_CSTR_TCHAR("*TM_ANIMATION {")		},
	{ eASEKEY_CONTROL_ROT_TRACK,	PUT_CSTR_TCHAR("*CONTROL_ROT_TRACK {")	},
	{ eASEKEY_CONTROL_ROT_SAMPLE,	PUT_CSTR_TCHAR("*CONTROL_ROT_SAMPLE")	},
	{ eASEKEY_CONTROL_SCALE_TRACK,	PUT_CSTR_TCHAR("*CONTROL_SCALE_TRACK {")},
	{ eASEKEY_CONTROL_SCALE_SAMPLE,	PUT_CSTR_TCHAR("*CONTROL_SCALE_SAMPLE")	},
	{ eASEKEY_CONTROL_POS_TRACK,	PUT_CSTR_TCHAR("*CONTROL_POS_TRACK {")	},
	{ eASEKEY_CONTROL_POS_SAMPLE,	PUT_CSTR_TCHAR("*CONTROL_POS_SAMPLE")	},

	{ eASEKEY_CONTROL_ROT_TCB,		PUT_CSTR_TCHAR("*CONTROL_ROT_TCB {")	},
	{ eASEKEY_CONTROL_TCB_ROT_KEY,	PUT_CSTR_TCHAR("*CONTROL_TCB_ROT_KEY")	},

};//SPRAseKey	g_ASEKey[eASEKEY_SIZE]
//----------------------------------------------------------------------------------------
SPRAseKey	g_ConfirmAseKey[eASEKEY_SIZE] = 
{
	{ eASEKEY_GEOMOBJECT,			PUT_CSTR_TCHAR("*지옴오브젝트 {")				},
	{ eASEKEY_NODE_NAME,			PUT_CSTR_TCHAR("*노드 네임")					},
	{ eASEKEY_NODE_TM,				PUT_CSTR_TCHAR("*노드 티엠 {")					},

	{ eASEKEY_MESH,					PUT_CSTR_TCHAR("*메쉬 {")						},
	{ eASEKEY_MESH_NUMVERTEX,		PUT_CSTR_TCHAR("*메쉬_버텍스 갯수")				},
	{ eASEKEY_MESH_NUMFACES,		PUT_CSTR_TCHAR("*메쉬_인덱스 갯수")				},

	{ eASEKEY_MESH_VERTEX_LIST,		PUT_CSTR_TCHAR("*메쉬_버텍스_리스트 {")			},
	{ eASEKEY_MESH_VERTEX,			PUT_CSTR_TCHAR("*메쉬_버텍스")					},
	{ eASEKEY_MESH_FACE_LIST,		PUT_CSTR_TCHAR("*메쉬_인덱스_리스트 {")			},
	{ eASEKEY_MESH_FACE,			PUT_CSTR_TCHAR("*메쉬_인덱스")					},

	{ eASEKEY_MATERIAL_LIST,		PUT_CSTR_TCHAR("*재질_리스트 {")				},
	{ eASEKEY_MATERIAL_COUNT,		PUT_CSTR_TCHAR("*재질_갯수")					},
	{ eASEKEY_MATERIAL_REF,			PUT_CSTR_TCHAR("*재질_참조")					},
	{ eASEKEY_MATERIAL,				PUT_CSTR_TCHAR("*재질 ")						},

	{ eASEKEY_MAP_DIFFUSE,			PUT_CSTR_TCHAR("*맵_디퓨즈 {")					},
	{ eASEKEY_BITMAP,				PUT_CSTR_TCHAR("*비트맵")						},

	{ eASEKEY_MESH_NUMTVERTEX,		PUT_CSTR_TCHAR("*메쉬_텍스쳐버텍스 갯수")		},
	{ eASEKEY_MESH_TVERTLIST,		PUT_CSTR_TCHAR("*메쉬_텍스쳐버텍스 리스트 {")	},
	{ eASEKEY_MESH_TVERT,			PUT_CSTR_TCHAR("*메쉬_텍스쳐 버텍스")			},

	{ eASEKEY_MESH_NUMTVFACES,		PUT_CSTR_TCHAR("*메쉬_텍스쳐 인덱스 갯수")		},
	{ eASEKEY_MESH_TFACELIST,		PUT_CSTR_TCHAR("*메쉬_텍스쳐 인덱스 리스트")	},
	{ eASEKEY_MESH_TFACE,			PUT_CSTR_TCHAR("*메쉬_텍스쳐 인덱스")			},

	{ eASEKEY_MESH_NORMALS,			PUT_CSTR_TCHAR("*메쉬_노멀{")				},
	{ eASEKEY_MESH_FACENORMAL,		PUT_CSTR_TCHAR("*메쉬_인덱스 노멀")			},

	{ eASEKEY_TM_ANIMATION,			PUT_CSTR_TCHAR("*티엠_애니 {")				},
	{ eASEKEY_CONTROL_ROT_TRACK,	PUT_CSTR_TCHAR("*컨트롤_회전_트랙 {")		},
	{ eASEKEY_CONTROL_ROT_SAMPLE,	PUT_CSTR_TCHAR("*컨트롤_회전_샘플")			},
	{ eASEKEY_CONTROL_SCALE_TRACK,	PUT_CSTR_TCHAR("*컨트롤_스케일_트랙 {")		},
	{ eASEKEY_CONTROL_SCALE_SAMPLE,	PUT_CSTR_TCHAR("*컨트롤_스케일_샘플")		},
	{ eASEKEY_CONTROL_POS_TRACK,	PUT_CSTR_TCHAR("*컨트롤_포지션_트랙 {")		},
	{ eASEKEY_CONTROL_POS_SAMPLE,	PUT_CSTR_TCHAR("*컨트롤_포지션_샘플")		},

	{ eASEKEY_CONTROL_ROT_TCB,		PUT_CSTR_TCHAR("*컨트롤_회전_TCB {")		},
	{ eASEKEY_CONTROL_TCB_ROT_KEY,	PUT_CSTR_TCHAR("*컨트롤_TCB_회전_키값")		},

};//	SPRAseKey	g_ConfirmAseKey[eASEKEY_SIZE]


#endif	//	_PRASECOMMON_H_