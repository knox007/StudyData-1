/// Delegate ////////////////////////////////////////////////////

-------------
1.	Delegate
-------------

	1.	이해

		-	메소드에 대한 참조.

			-	c/c++ 의 함수포인터와 유사.

		-	콜백 기능 필요시 사용.

			-	콜백 함수

				1) 다른 함수의 인자로써 이용되는 함수.

				2) 어떤 이벤트에 의해 호출되어지는 함수.


		-	코드의 실행 여부는 컴파일 시점이 아닌

			런타임 시점에 부여.



	2.	선언 및 사용

		-	선언
			
			-	접근_지정자		delegate	리턴타입	대리자이름 (매개변수 목록);

			예)	delegate int TestDelegate( int a, int b )

		-	사용

			예)
				delegate int TestDelegate( int a, int b )

				int Plus( int a, int b ) { return a+b; }
				int Minus( int a, int b ) { return a-b; }
				
				.....

				TestDelegate callBack;

				callBack = new TestDelegate(Plus); 
				print(callBack(1,2));

				callBack = new TestDelegate(Minus); 
				print(callBack(5,2));
				
				-	대리자는 인스턴스가 아닌 형식.

		-	대리자를 이용한 콜백 구현 과정.

			1)	대리자 선언.

			2)	대리자의 인스턴스 생성. 

				인스턴스 생성시 대리자가 참조할 메소드를 매개변수로 전달.

			3)	대리자 호출.

	
	3.	대리자 사용 목적.

		-	값이 아닌 알고리즘을 매개 변수로 넘기고 싶은 경우.

			예)	배열을 정렬하는 메소드( Sort )를 만들때

				정렬 방식을 설정하는 메소드(Ascend, Descend : 오름차순, 내림차순 )를 만들어서

				상황에 따라 Sort에 전달.




