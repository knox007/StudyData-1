/// 스크립트 생성 /////////////////////////////////////////////////////
------------------------------
참고 : http://itmining.tistory.com/25?category=640760
------------------------------
1.	생성 방법
------------------------------

	1)	메뉴

		->	Asset		->	Create

		->	C# Script		->	이름 생성.

	2)	프로젝트 뷰

		->	우클릭		->	Create

		->	C# Script		->	이름 생성.



	*	유니티가 C# 클래스의 이름을 정할 때 파일이름을 참조하므로

		파일 생성시 바로 이름을 정해주도록 함.	

------------------------------
2.	스크립트 인스턴스화
------------------------------

	-	게임 오브젝트로 하여금 어떤 명령을 수행 하도록 지정하기 위해

		스크립트를 연결하는 것.

	-	방법

		1)	드래그 앤 드롭 방식.

			-	스크립트 선택하여 드래그

			-	1)	하이어라키 뷰의 게임 오브젝트 이름.

				2)	인스펙터 뷰의 하단 공백				

		2)	Add Component 방식.

			-	씬뷰나 하이어라키 뷰에서 게임 오브젝트 선택.

			-	인스펙터에서 Add Comoponent 버튼 클릭후 선택.

		

------------------------------
3.	스크립트 구조
------------------------------
/*
	네임 스페이스
	-	스크립트에서 사용할 수 있는 주요 명령어가 들어있는 곳의 위치.
*/
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
/*
	클래스 선언부
	-	유니티의 C#스크립트는 하나의 클래스 임.
	-	MonoBehaviour 
		-	유니티의 기본 제공기능들을 정의해놓은 클래스.
		-	Test 클래스는 MonoBehaviour 를 상속함으로써
			해당 기능들을 사용할수 있게된다.		
*/
public class Test : MonoBehaviour {

    /*
	Start
	-	게임 시작시 1회 호출되는 함수.
	     	주로 초기화에 사용됨.
    */
    void Start()
    {
   
    }

    /*
	Update
	-	매 프레임 마다 반복해서 호출되는 함수.
	-	예)	초당 60프레임의 게임은 Update함수가 
			1초에 60번 호출.

    */
    void Update()
    {
     
    }
}

