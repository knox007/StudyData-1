---------------------------------
1.	RigidBody 컴포넌트
---------------------------------

	1.	물리엔진의 지원을 받기 위해서 Rigidbody 컴포넌트를 적용한다.

	2.	적용 방법

		1)	메뉴 - Component - Physics - Rigidbody

		2)	게임오브젝트 선택 - 인스펙터에서 Add Component 클릭 - Physics - Rigidbody 선택

																- Rigidbody 검색 후 선택.

	3.	속성
		-------------------------------------------
		Mass	:	상대적인 의미의 질량.

					오브젝트 A의 Mass가 1, 오브젝트 B의 Mass가 10 이라면

					B가 A보다 10배 무겁다고 해석.

					편의상 1Kg라고 가정하고 작업.
		-------------------------------------------
		Drag	:	이동 마찰계수( 저항 )
		-------------------------------------------
		Angular Drag	:	회전 마찰계수( 저항 )
		-------------------------------------------
		Use Gravity	:	중력 적용 여부.

						디폴트 값은 true.
		-------------------------------------------		
		Is Kinematic	:	Kinematic( 운동학 ).
							
							운동을 일으키는 힘의 문제에 대해서는 언급하지 않고 단지 운동의 상태만을 다루는 역학(力學)의 일부분.
							( 네이버 지식백과 발췌. )

							외부 힘에 대한 영향이 미치지 않는 오브젝트 설정.

							이 옵션을 가진 오브젝트에 대해서는 물리엔진이 해당 오브젝트에게 가해지는 힘의 크기와 방향등을 계산하지 않는다는 것을 의미.

							Rigidbody를 적용하지 않는 것 vs Is Kinematic 체크 설정의 차이.

							-	Collision계열 함수들은 호출 됨.

								-	외부의 자극에 대해 물리적으로 반응을 보일 필요가 없는 경우 설정.
		-------------------------------------------
		Interpolate	:	물리력을 이용한 움직임이 끊어지는 현상 발생시 보간적용.

						-	None

						-	Interpolate	:	이전 프레임의 Transform과 보간.

						-	Extrapolate	:	다음 프레임의 Transform 변화를 추정하여 보간.

		-------------------------------------------
		Collision Detection	:	아주 빠른 물체는 물리엔진이 충돌 검출을 놓칠수 있음.

								충돌 검출의 세밀도 조정.

								Discrete < Continuous < Continuous Dynamic 순으로 세밀도 높으며 퍼포먼스를 많이 소비함.							
		-------------------------------------------
		Constraints 
			
			Freeze Position	:	해당 축으로 이동 막음.

			Freeze Rotation	:	해당 축을 기준으로 하는 회전을 막음.
		-------------------------------------------