/// 문자열 관련 함수 //////////////////////////////////////////

-----------------
1.	strlen
-----------------
	
	1.	원형
		
		#include <string.h>

		size_t strlen( const char *s )
	
		-	전달된 문자열의 길이 반환.



	2.	특징

		-	널문자는 길이에 포함하지 않음.

		-	size_t 으로 길이를 관리.

			-	typedef unsigned int size_t;

				-	unsigned int를 size_T로 대신함..


			-	보통 int 형으로 관리함.


-----------------
2.	strcpy / strncpy
-----------------

	1.	원형

		#include <string.h>

		char* strcpy( char * dest, const char * src );

			-	dest로 src의 문자열 복사.

			-	dest가 src의 길이보다 작지 않도록 주의.


		char* strncpy( char * dest, const char * src, size_t n	);

			-	dest로 src의 문자열을 n의 길이만큼 복사.

			-	복사시 널문자는 포함하지 않음.

				-	경우에 따라 배열끝에 널문자를 삽입해야함.

		-	복사된 문자열의 주소 값 반환.



-----------------
3.	strcat / strncat
-----------------


	1.	실수.

		int main()
		{

			char str1[] = "My String";

			char str2[] = "My String";				

			if( str1 == str2 )

				....

			else

				....

			return;

		}



	2.	원형

		#include <string.h>

		char* strcat( char * dest, const char * src );

			-	dest에 src를 덧붙힘.

		char* strncat( char * dest, const char * src, size_t n );

			-	dest에 src를 n의 길이만큼 덧붙힘.
		
			-	strncpy와는 달리 문자열 끝에 자동으로 널문자 삽입.

		-	덧붙힘이 시작되는 위치는 널문자가 저장된 위치.



-----------------
4.	strcmp / strncmp
-----------------

	1.	원형

		#include <string.h>
		
		int strcmp( const char * s1, const char *s2 );

		int strncmp( const char * s1, const char *s2, size_t n );

			-	n의 길이만큼만 문자 비교.


		-	두 문자열의 내용이 같으면 0, 다르면 0이 아닌 값 반환.

			-	s1 > s2  	-> 양수 반환.

			-	s1 < s2 	-> 음수 반환.

			-	s1 == s2	-> 0 반환.

				-	문자열의 크고 작음은 아스키 코드값을 기준으로 함.



-----------------
5.	그 외.
-----------------

	1.	원형

		#include <stdlib.h>

		int atoi( const char * str );

		-	문자열의 내용을 int형으로 반환.

		long atol( const char * str );

		-	문자열의 내용을 long형으로 반환.

		double atof( const char * str );

		-	문자열의 내용을 double형으로 반환.
	