/// 포인터를 대상으로한 const 선언 ////////////////////////////////////////////////////

-----------------------
1.	const의 용도
-----------------------

	1.	변수를 상수처럼 사용.

	2.	포인터 변수를 대상으로도 선언이 가능.

	

----------------------------------
2.	const int * ptr = &num;
----------------------------------

	1.	const가 맨 앞부분에 선언이 된 경우.

		- 포인터 변수 ptr이 가리키는 변수에 저장된 값을 변경하는 것을 허용치 않는다.


		예)
			int num = 10;

			const int * ptr = &num;

			*ptr = 20;	-	( X )

			num = 20;	-	( 0 )

			-	변수 num이 상수화 되는 것은 아님.


		-	이 경우의 const 선언은 값을 변경하는 방법에 제한을 두는 것이지 

			상수로 만드는 것은 아님.


----------------------------------
3.	int * const ptr = &num;
----------------------------------

	1.	const가 포인터변수 앞에 오는 경우.

		-	포인터 변수 ptr은 상수가 됨.

		-	한번 주소값이 저장되면 변경이 불가능해짐.


		예)
			int num1 = 10;

			int num2 = 20;

			int * const ptr = &num1;

			ptr = &num2;	-	( X )

			*ptr = 20;	-	( 0 )




----------------------------------
4.	const int * const ptr = &num;
----------------------------------

	1.	3, 4번의 경우가 모두 해당되는 경우.


			*ptr = 20;	-	( X )

			ptr = &num2;	-	( X )





----------------------------------
5.	const 선언의 목적
----------------------------------

	1.	코드의 안정성 향상

	( 소스 참고 )		
