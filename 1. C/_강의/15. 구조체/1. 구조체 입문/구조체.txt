/// 구조체 ///////////////////////////////////////////

------------------
1.	정의
------------------
	
	1.	구조체
		
		-	하나 이상의 변수( 포인터 변수와 배열 포함 )등을 묶어서

			새로운 자료형을 정의.

		예)

			마우스의 좌표정보를 관리해야 할때

			int xPos;

			int yPos;

			두개의 변수를 선언해야한다.

			이 두 변수는 항상 함께해야한다

			-	서로 독립된 정보를 표현하는게 아니라,

				마우스의 위치라는 하나의 정보를 표현하기 때문.

			-	하나의 정보를 표현하는 것이라면 저 둘을 하나로 

				묶어서 관리하는 것이 효율적임.

				-	구조체 사용.

					struct SPoint
					{
					   int _xPos;						
					   int _yPos;
					}


					struct SPerson
					{
					   char _name[20];		// 이름 표시
					   char _phoneNum[20];	// 전화번호	
					   int _age;		// 나이
					}	
					

-------------------------------
2.	구조체 변수의 선언과 접근
-------------------------------

	1.	변수 선언 방법.

		-	struct	구조체타입  객체이름;

			예)	struct SPoint pos;

				struct SPerson man;	


	2.	멤버변수 접근 방법.


		-	구조체_변수_이름.멤버변수

			예)	pos._xPos = 10;

	(소스 참고)
		




-------------------------------
3.	구조체 변수의 초기화.
-------------------------------

	1.	구조체 변수의 초기화 방법은 배열의 초기화와 유사하다.

		-	멤버의 순서대로 초기값을 나열.

			-	초기화 과정에서 문자열 멤버변수의 저장을 위해
	
				strcpy등의 함수를 사용하지 않아도 됨.

		예)

			int main()
			{
			   struct SPoint pos = {10, 20};

    			   struct SPerson man = {"홍길동", "010-1234-5678", 20};

			   .....	

			   return 0;	

			}


		





-------------------------------
4.	구조체와 typedef 선언
-------------------------------

	1.	기능.

		-	특정한 타입에 또다른 이름 부여.

		-	예)	typedef int INT;

				-	int에 INT라는 이름을 추가로 붙여줌.

		-	새로운 이름의 부여는 가장 마지막에 등장하는 단어를 중심으로 적용.

			형식)	typedef name1 name2 name3;

			예)	typedef unsigned char * PTR_UCHAR;

				-	unsigned char * 에 PTR_UCHAR라는 이름 추가 적용.

		-	typedef로 정의되는 자료형의 이름은 대문자로 시작하는 것이 관례.

			-	기본자료형의 이름과 구분하기 위해.
			


	2.	구조체에 적용.

		1)	구조체 선언후 typedef

			예)
				struct SPoint
				{
					int _xPos;
					int _yPOs;
				};
		
				typedef struct SPoint SPos;

		2)	구조체 정의와 typedef 동시 적용.

			예)
				typedef struct SPoint
				{
					int _xPos;
					int _yPOs;

				} SPos;

		
		3)	구조체 이름 생략.

			예)
				typedef struct
				{
					int _xPos;
					int _yPOs;

				}SPos;
					












