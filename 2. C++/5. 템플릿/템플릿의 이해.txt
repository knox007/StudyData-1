/// 템플릿의 이해 ///////////////////////////////////////////

---------------
1.	템플릿
---------------

	-	Template	:	형판, 견본, 본보기


	-	삼각 모형자 비유

		-	삼각형을 그릴 수 있는 틀이 준비되어 있음.

		-	어떤 색의 필기구를 사용하느냐에 따라

			삼각형의 색이 결정 됨.


	-	삼각 모형자 개념을 프로그래밍에 비유.
		
		-	틀은 준비되어 있지만 색이 정해져 있지 않음.

			- 	기능은 정해져 있지만 자료형은 정해져 있지 않음.

			-	삼각형 틀	:	기능, 역할

				색연필		:	데이터

				색		:	데이터 타입.

		
	
------------------------------
2.	템플릿의 선언 및 사용
------------------------------

	-	선언

		1)	____ Add( ___ a, ___ b ) { return a + b; }

		2)	데이터 타입을 "T"로 치환.

			-	T Add( T a, T b ) { return a + b; }

		3)	컴파일러는 T 라는 자료형을 인식 못하므로

			template 키워드를 사용하여 템플릿 타입임을 명시해준다.


			template< typename T >

			T Add( T a, T b ) { return a + b; }

	-	사용

		
			template< typename T >

			T Add( T a, T b ) { return a + b; }

			int main()
			{
			
			  cout<< Add( 1, 3 ) << endl;

			  cout<< Add( 1.1f, 3.2f ) << endl;

			  return 0;

			}

		->	템플릿으로 정의된 함수의 자료형이 결정되는 시점은

			인자가 전달되는 시점이다.
















			

					