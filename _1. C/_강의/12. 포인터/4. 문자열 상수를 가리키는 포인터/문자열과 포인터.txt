/// 문자열과 포인터 ////////////////////////////////////////////////////

-------------------------------
1.	문자열의 두가지 표현방식.
-------------------------------

	1.	배열을 이용한 변수 형태의 문자열 선언.

		char str1[ ] = "String";	->	배열 길이는 자동으로 할당.


	2.	포인터를 이용한 문자열 선언.

		char *pStr2 = "String";		->	메모리 공간에 "String"이 생성.

							문자열의 첫번째 문자 S의 주소값 반환.

							반환값이 pStr2에 저장.

							-	char형 문자 Y의 주소값이 반환되므로

								char형 포인터로 pStr2를 선언.


	3.	공통점

		-	str1이나 pStr2나 첫번째 문자 S의 주소값을 나타낸다.



		차이점.

		
		-	배열을 이용한 경우.

			------------------------------
			| S | t | r | i | n | g | \0 |
			------------------------------
			| -----	     str1  	-----|

			->	str1 자체로 문자열 전체를 저장하는 배열.


		-	포인터를 이용한 경우.

			---------		------------------------------
			|       |   -------->	| S | t | r | i | n | g | \0 |
			---------		------------------------------
			|-pStr2-|

			->	메모리 상에 자동으로 저장된 "String"의 첫 문자의 주소를 

				단순히 가리키고만 있는 포인터 변수.


		-	str1은 상수형태의 포인터로서( 배열의 이름은 상수 포인터 )
			
			문자 S의 주소를 가리키는 상태에서 벗어날 수 없지만

			pStr2는 포인터 변수로서 다른 주소를 가리킬수 있다.
			
			예)	char *pStr = "String";

				pStr = "String 2";

	
		-	배열에 저장된 문자열은 변경이 가능하다.

			하지만 포인터가 가리키는 문자열은 그 내용의 변경이 불가능하다.


			(소스 참고)