/// 형변환 /////////////////////////////////////////////////////////

-------------------------
1.	형변환이란?
-------------------------

	1.	정의.

		-	데이터의 표현 방식을 바꾸는 것.

			-	자동 형 변환( 묵시적 형 변환 )

				:	대입 연산 과정에서 자동으로 발생하는 형 변환.	


			-	강제 형 변환( 명시적 형 변환 )

				:	프로그래머가 형변환을 강제로 발생하게 하는 것.



-------------------------
2.	자동 형 변환.( 묵시적 형 변환 )
-------------------------

	1.	대입 연산 과정에서 발생하는 경우.

		:	대입 연산자 좌우에 존재하는 두 피연산자의 자료형이 일치하지 않으면

			왼편에 있는 피연산자를 대상으로 오른쪽 피연산자의 형변환이 자동으로 발생한다.


			예 1)	double num1 = 153;	//	int형 정수 245를 double형 실수로 자동 형 변환 발생.

				->	int형 정수 153은 double형 실수 153.0으로 변환되어 저장됨.


			예 2)	int num2 = 3.1415;	//	double형 실수 3.1415를 int형 정수로 자동 형 변환 발생.

				->	double 형 실수 3.1415가 int형 정수로 변환되어 저장됨.

				->	int 형은 소수점이하의 값을 표현 못하므로 3.1415는 3으로 변환되어 저장됨.


					* 소수부 손실
				
					: 	실수형 데이터를 정수형 데이터로 변환하는 과정에서 소수점 이하 데이터가 손실되는 현상.

			예 3)	int num3 = 129;
				
				char ch = num3;		//	int형 변수 num3에 저장된 값이 char형으로 자동 형 변환 발생.


				->	129 = 00000000 00000000 00000000 10000001

				->	char 형식으로 변환하려면 1바이트 크기로 줄여야 한다.( 상위 바이트 손실 발생 )

				->	10000001	//	->	-127

				->	상위 바이트 손실로 인해 부호가 바뀌는 경우도 발생 가능.



		자동 형 변환 규칙.

		-	데이터의 표현 범위가 더 작은 자료형으로의 형변환은 데이터 손실이 발생할 수 있다.

			( "1.	Auto Type Conversion" 참고 )




	2.	정수의 승격에 의한 경우.

		:	일반적으로 CPU가 처리하기에 가장 적합한 크기의 정수 자료형을 int로 정의한다.

			따라서 int형의 연산속도가 다른 자료형의 연산속도와 동일하거나 더 빠르다. ( "SizeOfOperator"참고 )

			->	int 형보다 작은 크기의 정수형 데이터는 int 형으로 형변환되어 연산이 진행된다.


			예)	short num1 = 10, num2 = 20;

				short num3 = num1 + num2;	//	num1, num2가 int 형으로 형변환 됨.

								//	저장되는 과정에서 short형으로 다시 형변환 됨.
						

	

	3.	피연산자의 자료형이 불일치 하는 경우.

		:	사칙 연산 같은 기본적인 산술 연산에는 두개의 피연산자가 필요하다.

			이때 둘의 자료형이 일치하지 않으면 자료형의 일치를 위해 자동 형 변환이 발생한다.



			예)	double num1 = 1.53 + 153;

				-	정수(153)와 실수(1.53)는 표현방식이 다르므로 사실상 덧셈이 불가능.

				-	5.15를 정수로 변환하거나, 153을 실수로 변환해서 연산을 진행해야한다.

				-	이때 데이터의 손실을 최소화하는 방향으로 변환이 발생된다.

					-	int형 정수 -> double 실수로 형변환.
			

		* 형변환의 우선 순위.

		:	정수 자료형 < 실수 자료형






-------------------------
3.	강제 형 변환( 명시적 형 변환. )
-------------------------

	( "Forced Type Conversion"참고 )



