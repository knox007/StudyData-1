/// 상수 /////////////////////////////////////////////////////////

-------------------------
1.	리터럴 상수
-------------------------

	1.	상수
		
		-	변경이 불가능한 데이터.


	2.	리터럴 상수.

		-	일반적으로 변수에 할당되는 데이터 자체를 리터럴 상수라고 함.

		-	예)	int num1 = 3 + 4;						

				int num2 = 7 + num1;

				double num3 = 2.5 + 7.5;

				char ch1 = 'A';


	3.	다양한 상수의 표현.

		-	일반적으로 정수형 상수는 int형으로,

			실수형 상수는 double형으로 저장하기로 규정되어 있다.

			( "1.	Literal Size" 참고 )


		-	하지만 정수형은 int만 있는 것도 아니고,	( char, short, long 등 )

			실수형은 double만 있는것도 아니다.	( float, long double 등 )


		-	float num1 = 3.14;


			->	double( 8바이트 )형 데이터 3.14를 float( 4바이트 )형에 저장하였으므로 데이터가 소실될 수 있다.

				->	float형 상수로 저장해야한다.

				->	상수뒤에 float형 상수라는 의미의 f를 추가한다.

				->	float num1 = 3.14f;(대소문자 구분하지 않음. 3.14F도 가능.)

			

		-	종류


			타입	|	접미사	|	자료형		|		예			|
			-----------------------------------------------------------------------------------------
			정수형	|	U	|	unsigned int	|	unsigned int num = 1025u;	|
				|	L	|	long		|	long num = 1025L;		|
				|	UL	|	unsigned long	|	unsigned long num = 1025L;	|
				|	LL	|	long long	|	long long num = 1025LL;		|
			-----------------------------------------------------------------------------------------
			실수형	|	F	|	float		|	float num = 3.14f;		|
				|	L	|	long double	|	long double num = 5.78L;	|





-------------------------
2.	심볼릭 상수
-------------------------

	1.	심볼릭 상수.

		-	이름을 지니는 상수.

			-	변수의 초기화와 유사함.


		-	표현 방식

			const int BULLET_COUNT = 10;

			#define BULLET_COUNT 10

			->	BULLET_COUNT는 컴파일시 10이라는 데이터와 동일하게 처리됨.


	2.	주의 사항.

		-	반드시 초기화를 해줘야 함.

		-	심볼릭 상수도 일종의 상수이므로 초기화가 되면 값을 변경할 수 없다.

		-	상수작명시 관례.

			1)	상수의 이름은 모두 대문자로 한다.

			2)	둘 이상의 단어를 결합할때 BULLET_COUNT 와 같이 언더바를 이용하여

				두 단어를 구분한다.

		( "2.	심볼릭 상수" 참고 )



		
		
